name: Update Repository on New Tag

on:
  schedule:
    - cron: '0 0 * * *'  # Ejecutar una vez al día
  workflow_dispatch:  # Permitir ejecución manual

jobs:
  update-repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch latest tag from upstream
        run: |
          git fetch --tags https://github.com/keldaanCommunity/pokemonAutoChess.git
          LATEST_UPSTREAM_TAG=$(git ls-remote --tags https://github.com/keldaanCommunity/pokemonAutoChess.git | awk -F/ '{print $3}' | sort -V | tail -n1)
          echo "LATEST_UPSTREAM_TAG=$LATEST_UPSTREAM_TAG" >> $GITHUB_ENV

      - name: Fetch latest tag from fork
        run: |
          git fetch --tags origin
          LATEST_FORK_TAG=$(git tag | sort -V | tail -n1)
          echo "LATEST_FORK_TAG=$LATEST_FORK_TAG" >> $GITHUB_ENV

      - name: Compare Tags
        id: check_tags
        run: |
          echo "Upstream Tag: $LATEST_UPSTREAM_TAG"
          echo "Fork Tag: $LATEST_FORK_TAG"
          if [ "$LATEST_UPSTREAM_TAG" != "$LATEST_FORK_TAG" ]; then
            echo "::set-output name=NEW_TAG::true"
          else
            echo "::set-output name=NEW_TAG::false"
          fi

      - name: Merge Upstream Changes
        if: ${{ steps.check_tags.outputs.NEW_TAG == 'true' }}
        run: |
          git remote add upstream https://github.com/keldaanCommunity/pokemonAutoChess.git || true
          git fetch upstream
          git checkout master
          git merge upstream/master --strategy-option theirs --allow-unrelated-histories

      - name: Push to Origin
        if: ${{ steps.check_tags.outputs.NEW_TAG == 'true' }}
        run: |
          git push origin master

      - name: Create New Tag
        if: ${{ steps.check_tags.outputs.NEW_TAG == 'true' }}
        run: |
          git tag $LATEST_UPSTREAM_TAG
          git push origin $LATEST_UPSTREAM_TAG

      - name: Get Release Info from Upstream
        if: ${{ steps.check_tags.outputs.NEW_TAG == 'true' }}
        run: |
          UPSTREAM_RELEASE_URL="https://api.github.com/repos/keldaanCommunity/pokemonAutoChess/releases/tags/$LATEST_UPSTREAM_TAG"
          RELEASE_DATA=$(curl -s $UPSTREAM_RELEASE_URL)

          RELEASE_NAME=$(echo "$RELEASE_DATA" | jq -r '.name')
          RELEASE_BODY=$(echo "$RELEASE_DATA" | jq -r '.body')

          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV

      - name: Create Release in Fork
        if: ${{ steps.check_tags.outputs.NEW_TAG == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.POKEMON }}
        run: |
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/MunchiA/pokemonAutoChess/releases \
               -d '{
                 "tag_name": "'"$LATEST_UPSTREAM_TAG"'",
                 "name": "'"$RELEASE_NAME"'",
                 "body": "'"$RELEASE_BODY"'",
                 "draft": false,
                 "prerelease": false
               }'
